import { Row, Col, Button, Select, Card, Typography, Avatar, Space } from 'antd';
import { PlusOutlined } from '@ant-design/icons';
import { useEffect, useState } from 'react';
import './CauHoiThuongGap.css';
import { useNavigate } from 'react-router-dom';
import { fetchAllChuyenKhoa, getAllCauHoi } from '../../../services/apiDoctor';
import { IoBagAddSharp } from 'react-icons/io5';
import ModalCauHoi from '../../../components/TrangChu/ModalDoiMK/ModalCauHoi';
const { Title, Paragraph, Text } = Typography;

const questionCategories = [
  { label: 'T·∫•t c·∫£', value: 'all' },
  { label: 'Ti√™u h√≥a', value: 'tieuhoa' },
  { label: 'Tim m·∫°ch', value: 'timmach' },
  { label: 'Nhi khoa', value: 'nhi' },
  { label: 'Da li·ªÖu', value: 'dalieu' },
];

const mockAnswers = [
  {
    id: 1,
    question: 'T√¥i th∆∞·ªùng xuy√™n b·ªã ƒëau b·ª•ng sau ƒÉn t·ªëi, nguy√™n nh√¢n l√† g√¨?',
    answer:
      'Tri·ªáu ch·ª©ng n√†y c√≥ th·ªÉ li√™n quan ƒë·∫øn r·ªëi lo·∫°n ti√™u h√≥a ho·∫∑c vi√™m lo√©t d·∫° d√†y. B·∫°n n√™n ƒëi n·ªôi soi ti√™u h√≥a s·ªõm ƒë·ªÉ ki·ªÉm tra ch√≠nh x√°c.',
    doctor: {
      name: 'TS. BS. Nguy·ªÖn VƒÉn A',
      title: 'Chuy√™n khoa Ti√™u h√≥a',
      avatar: '/images/bs1.jpg',
    },
  },
  {
    id: 2,
    question: 'B√© nh√† t√¥i 3 tu·ªïi b·ªã s·ªët nh·∫π v√† ho, t√¥i n√™n l√†m g√¨?',
    answer:
      'B·∫°n n√™n theo d√µi nhi·ªát ƒë·ªô v√† cho b√© u·ªëng ƒë·ªß n∆∞·ªõc. N·∫øu ho k√©o d√†i ho·∫∑c s·ªët tr√™n 38.5¬∞C nhi·ªÅu l·∫ßn/ng√†y, n√™n ƒë∆∞a b√© ƒëi kh√°m b√°c sƒ© nhi.',
    doctor: {
      name: 'BS. Tr·∫ßn Th·ªã B',
      title: 'Chuy√™n khoa Nhi',
      avatar: '/images/bs2.jpg',
    },
  },
];

const CauHoiThuongGap = () => {
    const [selectedCategory, setSelectedCategory] = useState('all');
    const [dataAllCauHoi, setDataAllCauHoi] = useState([])
    const navigate = useNavigate()
    const [dataChuyenKhoa, setDataChuyenKhoa] = useState([])   
    const [selectedLocTheoChuyenKhoa, setSelectedLocTheoChuyenKhoa] = useState([]);
    const [openModalCauHoi, setOpenModalCauHoi] = useState(false);

    useEffect(() => {
        fetchListCauHoi()
    }, [selectedLocTheoChuyenKhoa])

    useEffect(() => {
        fetchAllChuyenKhoaDoctor()
    }, [])

    const fetchListCauHoi = async () => {

        let query = ''
        if (selectedLocTheoChuyenKhoa && selectedLocTheoChuyenKhoa.length > 0) {
            query += `&locTheoChuyenKhoa=${encodeURIComponent(JSON.stringify(selectedLocTheoChuyenKhoa))}`;
        }
        const res = await getAllCauHoi(query)
        console.log("res all cauhoi: ", res);
        if(res && res.data) {
            setDataAllCauHoi(res.data)
        }
    }

    const fetchAllChuyenKhoaDoctor = async () => {
        let query = `page=1&limit=1000`
        let res = await fetchAllChuyenKhoa(query)
        if(res && res.data) {
            setDataChuyenKhoa(res.data)
        }
    }   

    const onChangeTheoChuyenKhoa = (e) => {
        console.log("e: ", e);
        setSelectedLocTheoChuyenKhoa(e)
    };

    const chuyenKhoaOptions = [
        {
            value: null,
            label: <span>T·∫•t c·∫£ chuy√™n khoa</span>,
        },
        ...dataChuyenKhoa.map(item => ({
            value: item._id,
            label: (
            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                <img
                src={`${import.meta.env.VITE_BACKEND_URL}/uploads/${item.image}`}
                alt={item.name}
                style={{ width: 24, height: 24, borderRadius: '50%', objectFit: 'cover' }}
                />
                <span>{item.name}</span>
            </div>
            ),
        })),
    ];

  return (
    <div style={{ maxWidth: 1100, margin: '0 auto', padding: 24 }}>
      {/* Header */}
      <Row justify="space-between" align="middle" style={{ marginBottom: 24 }}>
        <Col xs={24} sm={16}>
          <Title level={3}>H·ªèi ƒë√°p c√πng b√°c sƒ©</Title>
        </Col>
        <Col xs={24} sm={8} style={{ textAlign: 'right' }}>
          <Button icon={<PlusOutlined />} type="primary" size="large" className='btn-datcauhoi' onClick={() => setOpenModalCauHoi(true)}>
            ƒê·∫∑t c√¢u h·ªèi
          </Button>
        </Col>
      </Row>

      {/* Select chuy√™n khoa */}
      <Row gutter={[16, 16]} style={{ marginBottom: 24 }}>
        <Col xs={24} sm={12} md={8}>            
            <Select
                size="large"
                suffixIcon={<IoBagAddSharp size={20} />}
                placeholder="T√¨m c√¢u h·ªèi theo chuy√™n khoa"
                className="filter-select"
                style={{ width: '100%' }}
                options={chuyenKhoaOptions}                
                value={selectedLocTheoChuyenKhoa}
                onChange={(e) => onChangeTheoChuyenKhoa(e)}
                allowClear
                onClear={() => {
                    navigate('/cau-hoi-thuong-gap'); // üëà trigger l·∫°i t√¨m t·∫•t c·∫£
                }}
            />
        </Col>
      </Row>

      {/* Danh s√°ch c√¢u h·ªèi v√† tr·∫£ l·ªùi */}
      { dataAllCauHoi.length > 0 ?
        dataAllCauHoi.map((item) => (
            <Card key={item.id} style={{ marginBottom: 24 }}>
            <Row gutter={[16, 16]}>
                {/* N·ªôi dung c√¢u h·ªèi & tr·∫£ l·ªùi */}
                <Col xs={24}>
                <Text strong style={{ fontSize: 16, color: '#1677ff' }}>‚ùì C√¢u h·ªèi:</Text>
                <Paragraph style={{ marginBottom: 16, marginLeft: 18, fontSize: 18 }}>{item.cauHoi}</Paragraph>

                <Text strong style={{ fontSize: 16, color: '#52c41a' }}>üí¨ ƒê∆∞·ª£c tr·∫£ l·ªùi b·ªüi:</Text>
                <Row gutter={16} align="middle">
                    <Col xs={5} sm={3}>
                    <Avatar size={64} src={`${import.meta.env.VITE_BACKEND_URL}/uploads/${item?.doctors.image}`} />
                    </Col>
                    <Col xs={19} sm={20}>
                    <Space direction="vertical" size={0}>
                        <Text style={{fontSize: 18}} strong>{item?.doctors.chucVuId.map(item => item?.name).join(', ')}</Text>
                        <Text style={{ fontSize: 16 }}>{item?.doctors.lastName} {item?.doctors.firstName}</Text>
                    </Space>
                    <Paragraph style={{ marginTop: 8, fontSize: 16, color:'blue' }}>üí¨ Tr·∫£ l·ªùi: {item.cauTraLoi}</Paragraph>
                    </Col>
                </Row>
                </Col>
            </Row>
            </Card>
        )) : <>
            <Card style={{ marginBottom: 24, textAlign: 'center' }}>
                <Text type="secondary" style={{ fontSize: 16 }}>‚ö† Ch∆∞a c√≥ c√¢u h·ªèi n√†o ƒë∆∞·ª£c ƒë·∫∑t</Text>
            </Card>
      </>
    }

    <ModalCauHoi
        openModalCauHoi={openModalCauHoi}
        setOpenModalCauHoi={setOpenModalCauHoi}
    /> 
    </div>
  );
};

export default CauHoiThuongGap;
